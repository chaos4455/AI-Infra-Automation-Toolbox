apiVersion: v1
kind: Service
metadata:
  name: argocd-server-svc
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/part-of: argo-cd
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: http
  selector:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/part-of: argo-cd

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server-deployment
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/part-of: argo-cd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd
      app.kubernetes.io/part-of: argo-cd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd
        app.kubernetes.io/part-of: argo-cd
    spec:
      containers:
        - name: argocd-server
          image: argoproj/argocd:v2.4.11
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: ARGOCD_DB_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: argocd-db-secret
                  key: db-secret-key
            - name: ARGOCD_DB_CERT
              valueFrom:
                secretKeyRef:
                  name: argocd-db-secret
                  key: db-cert
            - name: ARGOCD_DB_CA_CERT
              valueFrom:
                secretKeyRef:
                  name: argocd-db-secret
                  key: db-ca-cert
            - name: ARGOCD_DB_ROOT_CERT
              valueFrom:
                secretKeyRef:
                  name: argocd-db-secret
                  key: db-root-cert
            - name: ARGOCD_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: argocd-db-secret
                  key: db-username
            - name: ARGOCD_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: argocd-db-secret
                  key: db-password
            - name: ARGOCD_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: argocd-db-secret
                  key: db-host
            - name: ARGOCD_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: argocd-db-secret
                  key: db-port
            - name: ARGOCD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ARGOCD_REPO_URL
              value: "https://github.com/PROJECT_OWNER/PROJECT_NAME.git"
            - name: ARGOCD_REPO_PASSWORD_SECRET_NAME
              value: "ARGO_REPO_SECRET"
          volumeMounts:
            - name: argocd-db-secret-mount
              mountPath: /secrets/db
              readOnly: true
      volumes:
        - name: argocd-db-secret-mount
          secret:
            secretName: argocd-db-secret

---

apiVersion: v1
kind: Secret
metadata:
  name: argocd-db-secret
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/part-of: argo-cd
type: Opaque
data:
  db-secret-key: UFZVNVJFQ0lFVkFCTEU=
  db-cert: U0hBVkFURVJFUFJJVkFURSBTVFJJTkcgQ0VSVElGSUNBVEUhCi0tLS0tQkVHSU4tLS0tLQo=
  db-ca-cert: U0hBVkFURVJFUFJJVkFURSBTVFJJTkcgQ0VSVElGSUNBVEUhCi0tLS0tQkVHSU4tLS0tLQo=
  db-root-cert: U0hBVkFURVJFUFJJVkFURSBTVFJJTkcgQ0VSVElGSUNBVEUhCi0tLS0tQkVHSU4tLS0tLQo=
  db-username: YWRtaW4=
  db-password: UGFzc3dvcmQx
  db-host: argocd-postgres.openshift-infra.svc.cluster.local
  db-port: "5432"